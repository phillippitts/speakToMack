plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'checkstyle'  // Clean code enforcement
}

group = 'com.phillippitts'
version = '0.0.1-SNAPSHOT'
description = 'speakToMack'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

configurations {
    all {
        // Exclude default Logback in favor of Log4j 2
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Logging with Log4j 2 (replaces Logback)
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'com.lmax:disruptor:3.4.4'  // For async logging performance

    // Metrics and monitoring
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // STT engines
    implementation 'net.java.dev.jna:jna:5.13.0'           // Required by Vosk
    implementation 'com.alphacephei:vosk:0.3.38'          // Vosk STT (0.3.45 has native lib issue on macOS)

    // Hotkey support
    implementation 'com.github.kwhat:jnativehook:2.2.2'    // Global hotkeys

    // Utilities
    implementation 'org.json:json:20231013'                // JSON parsing for Vosk

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.awaitility:awaitility:4.2.0'   // Async testing
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform {
        // By default, exclude integration tests and tests requiring real binaries/hardware
        // for fast unit test execution in CI
        excludeTags 'integration', 'requiresVoskModel', 'requiresWhisperBinary', 'real-binary'

        // Allow running real-binary tests with: ./gradlew test -Dtest.includeRealBinary=true
        if (System.getProperty('test.includeRealBinary') == 'true') {
            includeTags 'real-binary'
        }
    }
    // Address Mockito warning on Java 21
    jvmArgs '-XX:+EnableDynamicAgentLoading'
}

// Separate task for all integration tests
tasks.register('integrationTest', Test) {
    description = 'Runs integration tests (tagged with @Tag("integration"))'
    group = 'verification'
    useJUnitPlatform {
        includeTags 'integration'
    }
    jvmArgs '-XX:+EnableDynamicAgentLoading'
    shouldRunAfter test
}

// Separate task for Vosk model integration tests
tasks.register('voskIntegrationTest', Test) {
    description = 'Runs Vosk integration tests (requires Vosk model)'
    group = 'verification'
    useJUnitPlatform {
        includeTags 'requiresVoskModel'
    }
    jvmArgs '-XX:+EnableDynamicAgentLoading'
    shouldRunAfter test
}

// Task for tests requiring real binaries/hardware
tasks.register('realBinaryTest', Test) {
    description = 'Runs tests requiring real binaries, models, or hardware (tagged with @RequiresRealBinary)'
    group = 'verification'
    useJUnitPlatform {
        includeTags 'real-binary'
    }
    jvmArgs '-XX:+EnableDynamicAgentLoading'
    shouldRunAfter test
}

// Run both unit and integration tests with ./gradlew check
tasks.named('check') {
    dependsOn integrationTest
}

checkstyle {
    toolVersion = '10.12.0'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    // Fail build on violations
    maxWarnings = 0
}
